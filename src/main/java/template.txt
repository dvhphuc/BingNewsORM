package temp;

import org.example.model.?;
import org.example.repository.?Repository;
import org.example.repository.impl.CrudRepositoryImpl;

import java.util.List;
import java.util.function.Predicate;

public class ?RepositoryImpl implements ?Repository {
    CrudRepositoryImpl<?, String> crudRepository;
    public ?RepositoryImpl() {
        crudRepository = new CrudRepositoryImpl<>(?.class);
    }

    @Override
    public List<?> getInPage(int page, int size) throws Exception {
        return crudRepository.getInPage(page, size);
    }

    @Override
    public List<?> find(Predicate<?> predicate) throws Exception {
        return crudRepository.find(predicate);
    }

    @Override
    public long count(Predicate<?> predicate) throws Exception {
        return crudRepository.count(predicate);
    }

    @Override
    public void save(? entity) throws Exception {
        crudRepository.save(entity);
    }

    @Override
    public void update(? entity) throws Exception {
        crudRepository.update(entity);
    }

    @Override
    public void delete(String s) throws Exception {
        crudRepository.delete(s);
    }

    @Override
    public ? findById(String s) throws Exception {
        return crudRepository.findById(s);
    }

    @Override
    public List<?> findAll() throws Exception {
        return crudRepository.findAll();
    }
}
